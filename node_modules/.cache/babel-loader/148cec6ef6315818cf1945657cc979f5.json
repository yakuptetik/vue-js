{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  enctype: \"multipart/form-data\",\n  novalidate: \"\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Upload images\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"dropbox\"\n};\nconst _hoisted_6 = [\"name\", \"disabled\"];\nconst _hoisted_7 = {\n  key: 0\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\" Drag your file(s) here to begin\");\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" or click to browse \");\n\nconst _hoisted_11 = [_hoisted_8, _hoisted_9, _hoisted_10];\nconst _hoisted_12 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\"UPLOAD\"), $options.isInitial || $options.isSaving ? (_openBlock(), _createElementBlock(\"form\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"input\", {\n    type: \"file\",\n    multiple: \"\",\n    name: $data.uploadFieldName,\n    disabled: $options.isSaving,\n    onChange: _cache[0] || (_cache[0] = $event => {\n      $options.filesChange($event.target.name, $event.target.files);\n      _ctx.fileCount = $event.target.files.length;\n    }),\n    accept: \"image/*\",\n    class: \"input-file\"\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_6), $options.isInitial ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _hoisted_11)) : _createCommentVNode(\"v-if\", true), $options.isSaving ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \" Uploading \" + _toDisplayString(_ctx.fileCount) + \" files... \", 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;EA2EOA,EAAE,EAAC;;;EACDC,KAAK,EAAC;;;;EAEHC,OAAO,EAAC;EAAsBC,UAAU,EAAV;;;gCAClCC,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB;AAAA;AAAjB;;;EACKH,KAAK,EAAC;;;;;;;iDAGa;;gCACaG,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;kDAAI;;iCAAJC;;;;;uBAT3CC,oBAiBO,KAjBP,cAiBO,CAhBLF,oBAeI,KAfJ,cAeI,CAdFG,6BAcE,EAbmDC,sBAAaA,mCAAlEF,oBAYO,MAZP,cAYO,CAXLG,UAWK,EAVLL,oBASM,KATN,cASM,CARJA,oBACsC,OADtC,EACsC;IAD/BM,IAAI,EAAC,MAC0B;IADnBC,QAAQ,EAAR,EACmB;IADTC,IAAI,EAAEC,qBACG;IADeC,QAAQ,EAAEN,iBACzB;IADoCO,QAAM;MAAEP,qBAAYQ,MAAM,CAACC,MAAP,CAAcL,IAA1B,EAAgCI,MAAM,CAACC,MAAP,CAAcC,KAA9C;MAAsDC,iBAAYH,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBE,MAAhC;IAAsC,CAA9F,CAC1C;IAApCC,MAAM,EAAC,SAA6B;IAAnBpB,KAAK,EAAC;EAAa,CADtC;;EAAA,aAQI,EANOO,oCAATF,oBAEI,GAFJ,EAEIgB,UAFJ,EAEIC,WAFJ,sCAME,EAHOf,mCAATF,oBAEI,GAFJ,EAEIkB,WAFJ,EAAmB,gBACPC,iBAAGN,cAAH,CADO,GACQ,YAD3B,EAEA;EAAA;EAFA,sCAGE,CATN,CAUK,CAZP,sCAaE,CAfJ,CAgBK,CAjBP","names":["id","class","enctype","novalidate","_createElementVNode","_hoisted_9","_createElementBlock","_createCommentVNode","$options","_hoisted_4","type","multiple","name","$data","disabled","onChange","$event","target","files","_ctx","length","accept","_hoisted_7","_hoisted_11","_hoisted_12","_toDisplayString"],"sourceRoot":"","sources":["/Users/yakup/Desktop/vue-proje/src/views/imageView.vue"],"sourcesContent":["<script>\nimport { upload } from './file-upload.service';\n\n  const STATUS_INITIAL = 0, STATUS_SAVING = 1, STATUS_SUCCESS = 2, STATUS_FAILED = 3;\n\n  export default {\n    name: 'app',\n    data() {\n      return {\n        uploadedFiles: [],\n        uploadError: null,\n        currentStatus: null,\n        uploadFieldName: 'photos'\n      }\n    },\n    computed: {\n      isInitial() {\n        return this.currentStatus === STATUS_INITIAL;\n      },\n      isSaving() {\n        return this.currentStatus === STATUS_SAVING;\n      },\n      isSuccess() {\n        return this.currentStatus === STATUS_SUCCESS;\n      },\n      isFailed() {\n        return this.currentStatus === STATUS_FAILED;\n      }\n    },\n    methods: {\n      reset() {\n        // reset form to initial state\n        this.currentStatus = STATUS_INITIAL;\n        this.uploadedFiles = [];\n        this.uploadError = null;\n      },\n      save(formData) {\n        // upload data to the server\n        this.currentStatus = STATUS_SAVING;\n\n        upload(formData)\n          .then(x => {\n            this.uploadedFiles = [].concat(x);\n            this.currentStatus = STATUS_SUCCESS;\n          })\n          .catch(err => {\n            this.uploadError = err.response;\n            this.currentStatus = STATUS_FAILED;\n          });\n      },\n      filesChange(fieldName, fileList) {\n        // handle file changes\n        const formData = new FormData();\n\n        if (!fileList.length) return;\n\n        // append the files to FormData\n        Array\n          .from(Array(fileList.length).keys())\n          .map(x => {\n            formData.append(fieldName, fileList[x], fileList[x].name);\n          });\n\n        // save it\n        this.save(formData);\n      }\n    },\n    mounted() {\n      this.reset();\n    },\n  }\n</script>\n\n<!-- HTML Template -->\n<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <!--UPLOAD-->\n      <form enctype=\"multipart/form-data\" novalidate v-if=\"isInitial || isSaving\">\n        <h1>Upload images</h1>\n        <div class=\"dropbox\">\n          <input type=\"file\" multiple :name=\"uploadFieldName\" :disabled=\"isSaving\" @change=\"filesChange($event.target.name, $event.target.files); fileCount = $event.target.files.length\"\n            accept=\"image/*\" class=\"input-file\">\n            <p v-if=\"isInitial\">\n              Drag your file(s) here to begin<br> or click to browse\n            </p>\n            <p v-if=\"isSaving\">\n              Uploading {{ fileCount }} files...\n            </p>\n        </div>\n      </form>\n  </div>\n   </div>\n</template>\n\n<!-- Javascript -->\n<script>\n</script>\n\n<!-- SASS styling -->\n<style lang=\"scss\">\n\n\n\n\n\n  .dropbox {\n    outline: 2px dashed grey; /* the dash box */\n    outline-offset: -10px;\n    background: lightcyan;\n    color: dimgray;\n    padding: 10px 10px;\n    min-height: 200px; /* minimum height */\n    position: relative;\n    cursor: pointer;\n  }\n  \n  .input-file {\n    opacity: 0; /* invisible but it's there! */\n    width: 100%;\n    height: 200px;\n    position: absolute;\n    cursor: pointer;\n  }\n  \n  .dropbox:hover {\n    background: lightblue; /* when mouse over to the drop zone, change color */\n  }\n  \n  .dropbox p {\n    font-size: 1.2em;\n    text-align: center;\n    padding: 50px 0;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}